CHARACTER_ACCEPT	SPACE	CHARACTER_ACCEPT
CHARACTER_ACCEPT	,	COMMA
CHARACTER_ACCEPT	:	COLON
CHARACTER_ACCEPT	;	SEMI
CHARACTER_ACCEPT	(	LPAREN
CHARACTER_ACCEPT	)	RPAREN
CHARACTER_ACCEPT	]	RBRACK
CHARACTER_ACCEPT	[	LBRACK
CHARACTER_ACCEPT	+	PLUS
CHARACTER_ACCEPT	-	MINUS
CHARACTER_ACCEPT	*	MULT
CHARACTER_ACCEPT	/	DIV
CHARACTER_ACCEPT	=	EQ
CHARACTER_ACCEPT	>	GREATER
CHARACTER_ACCEPT	<	LESSER
CHARACTER_ACCEPT	&	AND
CHARACTER_ACCEPT	|	OR
COLON	=	ASSIGN
GREATER	=	GREATEREQ
LESSER	=	LESSEREQ
LESSER	>	NEQ
CHARACTER_ACCEPT	"	STRING_INTERPRET
STRING_INTERPRET	ANY_STRING	STRING_INTERPRET
STRING_INTERPRET	"	STRLIT
STRING_INTERPRET	\	ESCAPE
ESCAPE	\	STRING_INTERPRET
ESCAPE	"	STRING_INTERPRET
ESCAPE	n	STRING_INTERPRET
ESCAPE	t	STRING_INTERPRET
ESCAPE	^	ESCAPE_C
ESCAPE_C	@	STRING_INTERPRET
ESCAPE_C	A	STRING_INTERPRET
ESCAPE_C	B	STRING_INTERPRET
ESCAPE_C	C	STRING_INTERPRET
ESCAPE_C	D	STRING_INTERPRET
ESCAPE_C	E	STRING_INTERPRET
ESCAPE_C	F	STRING_INTERPRET
ESCAPE_C	G	STRING_INTERPRET
ESCAPE_C	H	STRING_INTERPRET
ESCAPE_C	I	STRING_INTERPRET
ESCAPE_C	J	STRING_INTERPRET
ESCAPE_C	K	STRING_INTERPRET
ESCAPE_C	L	STRING_INTERPRET
ESCAPE_C	M	STRING_INTERPRET
ESCAPE_C	N	STRING_INTERPRET
ESCAPE_C	O	STRING_INTERPRET
ESCAPE_C	P	STRING_INTERPRET
ESCAPE_C	Q	STRING_INTERPRET
ESCAPE_C	R	STRING_INTERPRET
ESCAPE_C	S	STRING_INTERPRET
ESCAPE_C	T	STRING_INTERPRET
ESCAPE_C	U	STRING_INTERPRET
ESCAPE_C	V	STRING_INTERPRET
ESCAPE_C	W	STRING_INTERPRET
ESCAPE_C	X	STRING_INTERPRET
ESCAPE_C	Y	STRING_INTERPRET
ESCAPE_C	Z	STRING_INTERPRET
ESCAPE_C	[	STRING_INTERPRET
ESCAPE_C	\	STRING_INTERPRET
ESCAPE_C	]	STRING_INTERPRET
ESCAPE_C	^	STRING_INTERPRET
ESCAPE_C	_	STRING_INTERPRET
ESCAPE	SPACE	ESCAPE_WHITE
ESCAPE_WHITE	SPACE	ESCAPE_WHITE
ESCAPE_WHITE	\	STRING_INTERPRET
ESCAPE	DIGIT	ESCAPE_D
ESCAPE_D	DIGIT	ESCAPE_DD
ESCAPE_DD	DIGIT	STRING_INTERPRET
CHARACTER_ACCEPT	DIGIT	INTLIT
INTLIT	DIGIT	INTLIT
CHARACTER_ACCEPT	a	a
a	r	ar
ar	r	arr
arr	a	arra
arra	y	ARRAY
CHARACTER_ACCEPT	b	b
b	r	br
b	e	be
br	e	bre
be	g	beg
bre	a	brea
beg	i	begi
brea	k	BREAK
begi	n	BEGIN
CHARACTER_ACCEPT	d	d
d	o	DO
CHARACTER_ACCEPT	e	e
e	l	el
e	n	en
el	s	els
els	e	ELSE
en	d	END
END	i	endi
endi	f	ENDIF
END	d	endd
endd	o	ENDDO
CHARACTER_ACCEPT	d	d
d	o	DO
CHARACTER_ACCEPT	f	f
f	o	fo
f	u	fu
fo	r	FOR
fu	n	fun
fun	c	func
func	t	funct
funct	i	functi
functi	o	functio
functio	n	FUNC
CHARACTER_ACCEPT	i	i
i	f	IF
i	n	IN
CHARACTER_ACCEPT	l	l
l	e	le
le	t	LET
CHARACTER_ACCEPT	n	n
n	i	ni
ni	l	NIL
CHARACTER_ACCEPT	o	o
o	f	OF
CHARACTER_ACCEPT	r	r
r	e	re
re	t	ret
ret	u	retu
retu	r	retur
retur	n	RETURN
CHARACTER_ACCEPT	t	t
t	o	TO
t	h	th
t	y	ty
th	e	the
ty	p	typ
the	n	THEN
typ	e	TYPE
CHARACTER_ACCEPT	v	v
v	a	va
va	r	VAR
CHARACTER_ACCEPT	w	w
w	h	wh
wh	i	whi
whi	l	whil
whil	e	WHILE
END	ID_CHAR	ID
ID	ID_CHAR	ID
ARRAY	ID_CHAR	ID
BREAK	ID_CHAR	ID
BEGIN	ID_CHAR	ID
DO	ID_CHAR	ID
ELSE	ID_CHAR	ID
END	ID_CHAR	ID
ENDIF	ID_CHAR	ID
ENDDO	ID_CHAR	ID
DO	ID_CHAR	ID
FOR	ID_CHAR	ID
FUNC	ID_CHAR	ID
IF	ID_CHAR	ID
IN	ID_CHAR	ID
LET	ID_CHAR	ID
NIL	ID_CHAR	ID
OF	ID_CHAR	ID
RETURN	ID_CHAR	ID
TO	ID_CHAR	ID
THEN	ID_CHAR	ID
TYPE	ID_CHAR	ID
VAR	ID_CHAR	ID
WHILE	ID_CHAR	ID
CHARACTER_ACCEPT	ALPHANUMERIC	ID
