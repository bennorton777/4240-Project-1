package scanner;

/**
 * Created by ben on 2/9/14.
 */
public enum ScannerState {
    CHARACTER_ACCEPT(false),
    GREATER(true),
    LESSER(true),
    STRING_INTERPRET(false),
    ESCAPE_SEQUENCE(false),
    ESCAPE_C(true),
    ESCAPE_WHITESPACE(false),
    ESCAPE_D(true),
    ESCAPE_DD(true),
    ID(true),
    STRLIT(true),
    INTLIT(true),
    END(true),
    ENDIF(true),
    ENDDO(true),
    COMMA(true),
    COLON(true),
    SEMI(true),
    LPAREN(true),
    RPAREN(true),
    RBRACK(true),
    LBRACK(true),
    LBRACE(true),
    RBRACE(true),
    PERIOD(true),
    PLUS(true),
    MINUS(true),
    MULT(true),
    DIV(true),
    EQ(true),
    AND(true),
    OR(true),
    GREATEREQ(true),
    LESSEREQ(true),
    ASSIGN(true),
    NEQ(true),
    ARRAY(true),
    BREAK(true),
    BEGIN(true),
    DO(true),
    FOR(true),
    FUNC(true),
    IF(true),
    IN(true),
    LET(true),
    NIL(true),
    OF(true),
    TO(true),
    THEN(true),
    TYPE(true),
    VAR(true),
    WHILE(true),
    A(false),
    AR(false),
    ARR(false),
    ARRA(false),
    B(false),
    BR(false),
    BE(false),
    BRE(false),
    BEG(false),
    BREA(false),
    BEGI(false),
    E(false),
    EL(false),
    ELS(false),
    EN(false),
    ENDI(false),
    ENDD(false),
    D(false),
    F(false),
    FO(false),
    FU(false),
    FUN(false),
    I(false),
    LE(false),
    N(false),
    NI(false),
    L(false),
    O(false),
    T(false),
    TH(false),
    TY(false),
    THE(false),
    TYP(false),
    V(false),
    VA(false),
    W(false),
    WH(false),
    WHI(false),
    WHIL(false),
    ELSE(true);

    private final boolean IS_VALID_TOKEN;
    private String currentData;

    ScannerState(boolean isValidToken) {
        this.IS_VALID_TOKEN = isValidToken;
    }
    public boolean isTerminalState() {
        return this.IS_VALID_TOKEN;
    }
}
